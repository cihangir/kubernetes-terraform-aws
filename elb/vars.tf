variable "name" {
  description = "The name of the ELB. By default generated by terraform."
}

variable "aws_vpc_id" {}

variable "aws_subnet_subnet_ids" {
  description = "(Required) A list of subnet IDs to attach to the ELB."
}

variable "is_internal" {
  description = "If the ELB is internal or not"
  default     = true
}

variable "aws_elb_instance_port" {
  description = "(Required) The port on the instance to route to"
  default     = 80
}

variable "aws_elb_instance_protocol" {
  description = "(Required) The protocol to use to the instance. "
  default     = "http"

  # http, https, tcp, ssl
}

variable "aws_elb_protocol" {
  description = "(Required) The protocol to listen on."
  default     = "http"

  # http, https, tcp, ssl
}

variable "aws_elb_port" {
  description = "(Required) The port to listen on for the load balancer"
  default     = 80
}

variable "aws_elb_ssl_certificate_id" {
  description = " (Optional) The id of an SSL certificate you have uploaded to AWS IAM. Only valid when instance_protocol and lb_protocol are either HTTPS or SSL"
  default     = ""
}

### TODO(cihangir) is this a general case?

variable "aws_elb_instance_port_2" {
  description = "(Required) The port on the instance to route to"
  default     = 8080
}

variable "aws_elb_instance_protocol_2" {
  description = "(Required) The protocol to use to the instance. "
  default     = "http"

  # http, https, tcp, ssl
}

variable "aws_elb_protocol_2" {
  description = "(Required) The protocol to listen on."
  default     = "http"

  # http, https, tcp, ssl
}

variable "aws_elb_port_2" {
  description = "(Required) The port to listen on for the load balancer"
  default     = 80
}

variable "aws_elb_ssl_certificate_id_2" {
  description = " (Optional) The id of an SSL certificate you have uploaded to AWS IAM. Only valid when instance_protocol and lb_protocol are either HTTPS or SSL"
  default     = ""
}

variable "aws_elb_health_check_healthy_threshold" {
  description = "(Required) The number of checks before the instance is declared healthy."
  default     = 2
}

variable "aws_elb_health_check_unhealthy_threshold" {
  description = "(Required) The number of checks before the instance is declared unhealthy."
  default     = 3
}

variable "aws_elb_health_check_target" {
  description = "(Required) The target of the check."
  default     = "HTTP:80/healthcheck"
}

variable "aws_elb_health_check_interval" {
  description = "(Required) The interval between checks."
  default     = 10
}

variable "aws_elb_health_check_timeout" {
  description = "(Required) The length of time before the check times out."
  default     = 5
}

variable "aws_elb_cross_zone_load_balancing" {
  description = "(Optional) Enable cross-zone load balancing."
  default     = true
}

variable "aws_elb_idle_timeout" {
  description = "(Optional) The time in seconds that the connection is allowed to be idle. Default: 60."
  default     = 30
}

variable "aws_elb_connection_draining" {
  description = "(Optional) Boolean to enable connection draining."
  default     = true
}

variable "aws_elb_connection_draining_timeout" {
  description = "(Optional) The time in seconds to allow for connections to drain."
  default     = 20
}

# prefixes

variable "aws_elb_prefix" {
  default = "elb-"
}
